Introduction
Creating a Pet Adoption System!

Objective
In this challenge, you will be challenged to create a registration system via CLI (command line interface) so our future adopters can choose their pet.
The animal shelter owner who will be the user of your program will be able to:

Register a new pet
Search for registered pet data
Delete a registered pet
List all registered pets
List pets by any criteria (age, name, breed)
And much more!
The system must be implemented using Object-Oriented concepts and other good programming practices.

Knowledge you will apply:
Object Orientation (OO)
File and array manipulation
Java IO
Exceptions
Coding best practices
File Systems
Challenge Requirements
The challenge will be organized into STEPS in which you will develop new features for our CLI application.

Feel free to create and organize entities, services, utilities, and whatever you wish for this project!

Step 1: Read the base file with the essential questions.
Create a file called forms.txt, which should contain the following questions:

1 - What is the pet's first and last name?

2 - What type of pet is it (Dog/Cat)?

3 - What is the animal's sex?

4 - What is the address and neighborhood where it was found?

5 - What is the pet's approximate age?

6 - What is the pet's approximate weight?

7 - What is the pet's breed?

Your application must read the contents of this .txt file and display the questions in the terminal.

"Print" is not allowed in the code; you must READ the file!

Step 2: Creating the initial menu
After the file is printing the contents of the form.txt file to the terminal, you must create an initial menu with the following options:
Register a new pet
Search a pets
Change the registered pet's data
Delete a registered pet
List all registered pets
List pets by specific criteria (age, name, breed)
Exit
The menu should be displayed on the terminal, and the user should be able to choose an option by entering the corresponding number.
Rules:
The user cannot enter 0 or negative numbers.
If the user enters an invalid number, the menu should be displayed again.
The user can only enter numbers; they cannot enter letters or special characters.

Step 3: Registering New Pets
When selecting option 1, the user should be able to register a new pet. At this point, you should read the QUESTIONS from the formulario.txt file and store the answers in an object of the Pet type.

Rules:
The user must register a pet with a first and last name; otherwise, throw an exception.
The full name cannot contain special characters, only letters from A-Z.
For the pet's TYPE and SEX, you must use ENUM.
In the address question, you should ask:
i. House Number
ii. City
iii. Street
For the pet's approximate age and weight, the user can enter numbers with commas or periods, but only numbers.
If the user enters a weight greater than 60 kg or a weight less than 0.5 kg, throw an exception.
If the user enters an age greater than 20 years, throw an exception.
If the user enters an age less than 1 year (age in months), convert it to 0.x years.
In the race field, the user cannot use numbers or special characters.
In the questions about NAME, RACE, WEIGHT, AGE, and ADDRESS (number field only), if the user DOES NOT PROVIDE or leaves it blank, you must enter NOT PROVIDED
(must be a constant)!

Step 4: File Storage
Now, when saving the PET to an object, you must save the answers in a .txt file with the name formatted as follows:
20231101T1234-FLORZINHADASILVA.TXT.

Rules:
The file name must follow the format: year, month, day, T, hour, minute - NAME+SURNAME in capital letters.
The file must be saved in the petsCadastrados folder in the project root.
The file contents must contain ALL ANSWERS PER LINE, that is, each answer must be on a separate line.
The address field must be saved entirely on the same line.
The file will only contain ANSWERS, NOT QUESTIONS! Example of a saved file:
1 - Florzinha da Silva
2 - Cat
3 - Female
4 - Street 2, 456, Seilandia
5 - 6 years
6 - 5kg
7 - Siamese

Step 5: Search for the Registered Pet's Data
When selecting option 2, the user should be able to search for the pet using specific data. The user can search for the pet by:
First or Last Name
Sex
Age
Weight
Breed
Address
Furthermore, the user can combine one or two search criteria, i.e.:
First and/or Last Name AND Age
Age AND Weight
At this point, you should DISPLAY a new menu asking the user which criteria they want to use to search for the pet.

After the user selects the criteria, you must print the pets that match the search criteria, which can be one or more, in the terminal in this format:
Rules:
The user must FIRST and ALWAYS select the ANIMAL TYPE criterion.
The response format must ALWAYS display a list of possible results, for example:
1. Rex - Dog - Male - 123, Street 1 - City 1 - 2 years old - 5 kg - Mixed-breed
2. Florzinha da Silva - Cat - Female - 456, Street 2 - Seilandia - 6 years old - 5 kg - Siamese
If the user selects, for example, NAME, the search results must include PARTS of the name. For example, if they search for FLOR, they must include case 2 mentioned above.
All searches must be case-sensitive, meaning they ignore uppercase and lowercase letters (treating them as equal) and accents.

Level 2 Rule (not mandatory):
Allow the user to search by REGISTRATION DATE in the system. For example, you enter the month and year (+ 1 or 2 criteria), and it displays this information.
When printing the results, put the search term used in BOLD when found in the response. (Example: If a user searches for FLOWER, the pet's name should be printed in BOLD.)

Step 6: Edit a registered pet Ô∏è
Allow the user to edit the information of a registered pet.

Rules:
The user must SEARCH according to the criteria in the previous answer.
If the user enters an invalid search number, the search menu will be displayed again.
The user will receive a LIST (similar to the previous display) with the search results, and must choose the pet number they wish to edit.
The user can edit ALL pet information EXCEPT TYPE AND SEX.

Step 7: Delete an animal from the registry
When selecting option 4, the user must be able to delete the pet.

Rules:
The user must SEARCH according to the criteria in the previous answer.
If the user enters an invalid search number, the search menu will be displayed again.
The user will receive a LIST (similar to the previous display) with the search results and must select the number of the pet they wish to delete.
The user must confirm the deletion of the pet by typing YES or NO.
Only one pet can be deleted at a time.
If the user enters YES, the pet will be deleted and a success message will be displayed.

Step 8: Exit
Selecting option 5 will close the program.

EXTRA Step:
If you've completed all the previous steps, you can implement additional functionality for your program.

You'll create a new options screen on the home screen, as follows:
1 - Start the system to register pets
2 - Start the system to modify the form
If the user chooses option 2, you should display a new menu with the following options:
Create a new question
Edit an existing question
Delete an existing question
Return to the main menu
Exit

Rules Option 1:
The user must enter the new question, and you must save the new question in the form.txt file.
The question must FOLLOW the order with the mandatory numbering, that is, the user must look at the PREVIOUS question and add +1 to the numbering.
New questions are not mandatory, but if the user DOES NOT answer, mark it as NOT INFORMED.

Rules Option 2:
The user CANNOT modify the ORIGINAL questions (1 to 7), only the questions they added.
The user must enter the number of the question they want to change, then you must print it on the screen and offer the option to change.
The user can change the question, but not the answer. That is, you must ask the new question and save it to the file.

Rules for Option 3:
The user CANNOT delete the ORIGINAL questions (1 to 7), only the questions they added.
The user must enter the number of the question they wish to delete, then print it on the screen and offer the option to delete.
The user must confirm the deletion of the question by typing YES or NO.

GENERAL Rules for New Options:
If there are 9 questions (2 added), and the user DELETES QUESTION 8, question 9 must take the place of question 8.
Do not leave ANY BLANK LINES in the question or answer file; always reorder them.
When asking one of the newly added QUESTIONS (if any), you must read the question file and display the added questions normally. If the user RESPONDS, the file saved with the pet must contain the answer to the added question in the following format:
1 - Florzinha da Silva
2 - Cat
3 - Female
4 - Rua 2, 456, Seilandia
5 - 6 years
6 - 5kg
7 - Siamese
8 - [EXTRA - NEW QUESTION ADDED] - USER'S RESPONSE
9 - [EXTRA - NEW QUESTION ADDED] - USER'S RESPONSE